pipeline {
    agent any
    
    environment {
        PUBLIC_IP = '52.55.6.33'
    }

    stages {
        stage('cleanup') {
            steps {
                cleanWs()
            }
        }
        stage('deploy prod') {
            steps {
                sshagent(['jenkins-ssh']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@${PUBLIC_IP} << EOF
                    echo 'Pulling latest files from Dockerhub...'
                    docker login -u robinbpxl -p dckr_pat_XGbh5FFC-Qq9KFvDrGc95ZD_694
                    docker pull robinbpxl/devops-dtap:latest
                    << EOF
                    '''
                }
            }
        }
        stage('start prod') {
            steps {
                sshagent(['jenkins-ssh']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@${PUBLIC_IP} << EOF
                    echo 'Removing pre-existing container(s)...'
                    docker rm -f $(docker ps --filter "publish=80" -q) || docker rm -f docker-container || true
                    echo 'Starting container on remote server...'
                    docker run -d -p 80:3000 --name docker-container robinbpxl/devops-dtap
                    << EOF
                    '''
                }
            }
        }
        stage('test prod') {
            steps {
                echo 'Testing application using curl...'
                sshagent(['jenkins-ssh']) { 
                    sh'''
                        STATUS=$(ssh -o StrictHostKeyChecking=no ubuntu@${PUBLIC_IP} \
                        "curl -si http://${PUBLIC_IP} | grep -o 200")
                        if [ "$STATUS" = "200" ]; then
                            echo "===== STATUS CODE IS 200! ====="
                        else
                            echo "===== <!> BAD STATUS CODE <!> ====="
                            exit 1
                        fi
                    '''
                }
            }
        }
    }
}